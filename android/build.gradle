group 'com.example.famoco_finger_print'
version '1.0'

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.0'
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'

android {
    if (project.android.hasProperty("namespace")) {
        namespace 'com.example.famoco_finger_print'
    }

    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 19
    }

    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation fileTree(include: ['*.aar'], dir: 'libs')
        //implementation files('libs/libNativeMorphoSmartSDK_6.45.0.0.so')

        testImplementation 'junit:junit:4.13.2'
        testImplementation 'org.mockito:mockito-core:5.0.0'

        implementation 'com.android.support:multidex:1.0.3'
        implementation 'com.google.guava:guava:24.1-jre'

        //UI pas tres util pour le moment
        implementation 'com.google.android.material:material:1.3.0'
        implementation 'androidx.appcompat:appcompat:1.2.0'
        implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
        implementation 'androidx.cardview:cardview:1.0.0'
        implementation 'androidx.legacy:legacy-support-v4:1.0.0'

        // Import the BoM for the Firebase platform
        implementation platform('com.google.firebase:firebase-bom:26.0.0')
        // Declare the dependencies for the Crashlytics and Analytics libraries
        // When using the BoM, you don't specify versions in Firebase library dependencies
        implementation 'com.google.firebase:firebase-crashlytics'
        implementation 'com.google.firebase:firebase-analytics'

    }

    testOptions {
        unitTests.all {
            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
